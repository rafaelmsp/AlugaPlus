{"ast":null,"code":"import { inject, signal } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ApiService } from '../../../core/services/api.service';\nimport { NotificationService } from '../../../core/services/notification.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction RelatorioComponent_li_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", item_r1, \" \");\n  }\n}\nexport let RelatorioComponent = /*#__PURE__*/(() => {\n  class RelatorioComponent {\n    constructor() {\n      this.api = inject(ApiService);\n      this.notification = inject(NotificationService);\n      this.historico = signal([]);\n    }\n    exportar(tipo) {\n      const endpoint = tipo === 'pdf' ? '/relatorios/financeiro/pdf' : '/relatorios/financeiro/excel';\n      this.api.download(endpoint).subscribe({\n        next: blob => {\n          const fileType = tipo === 'pdf' ? 'application/pdf' : 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet';\n          const file = new Blob([blob], {\n            type: fileType\n          });\n          const url = window.URL.createObjectURL(file);\n          const link = document.createElement('a');\n          link.href = url;\n          link.download = tipo === 'pdf' ? 'relatorio-financeiro.pdf' : 'relatorio-financeiro.xlsx';\n          link.click();\n          window.URL.revokeObjectURL(url);\n          this.notification.success(`Relatorio ${tipo.toUpperCase()} gerado com sucesso.`);\n          this.historico.set([`${new Date().toLocaleString()} - exportado ${tipo.toUpperCase()}`, ...this.historico()]);\n        },\n        error: () => this.notification.error('Falha ao gerar relatorio.')\n      });\n    }\n    static {\n      this.ɵfac = function RelatorioComponent_Factory(t) {\n        return new (t || RelatorioComponent)();\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: RelatorioComponent,\n        selectors: [[\"app-relatorio\"]],\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 21,\n        vars: 1,\n        consts: [[1, \"space-y-6\"], [1, \"text-2xl\", \"font-semibold\", \"text-primary\"], [1, \"text-sm\", \"text-gray-400\"], [1, \"card\", \"space-y-4\"], [1, \"text-lg\", \"font-semibold\"], [1, \"flex\", \"flex-wrap\", \"gap-3\"], [\"type\", \"button\", 1, \"btn-primary\", 3, \"click\"], [\"type\", \"button\", 1, \"btn-outline\", 3, \"click\"], [1, \"text-xs\", \"text-gray-500\"], [1, \"space-y-2\", \"text-sm\", \"text-gray-400\"], [4, \"ngFor\", \"ngForOf\"]],\n        template: function RelatorioComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\")(2, \"h1\", 1);\n            i0.ɵɵtext(3, \"Relatorios gerenciais\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(4, \"p\", 2);\n            i0.ɵɵtext(5, \"Exporte dados em PDF e Excel com filtros personalizados.\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(6, \"section\", 3)(7, \"h2\", 4);\n            i0.ɵɵtext(8, \"Relatorio financeiro\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(9, \"div\", 5)(10, \"button\", 6);\n            i0.ɵɵlistener(\"click\", function RelatorioComponent_Template_button_click_10_listener() {\n              return ctx.exportar(\"pdf\");\n            });\n            i0.ɵɵtext(11, \" Exportar PDF \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(12, \"button\", 7);\n            i0.ɵɵlistener(\"click\", function RelatorioComponent_Template_button_click_12_listener() {\n              return ctx.exportar(\"excel\");\n            });\n            i0.ɵɵtext(13, \" Exportar Excel \");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(14, \"p\", 8);\n            i0.ɵɵtext(15, \" Os relatorios incluem receitas, despesas, contratos e inadimplencias agrupadas por periodo. \");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(16, \"section\", 3)(17, \"h2\", 4);\n            i0.ɵɵtext(18, \"Historico de exportacoes\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(19, \"ul\", 9);\n            i0.ɵɵtemplate(20, RelatorioComponent_li_20_Template, 2, 1, \"li\", 10);\n            i0.ɵɵelementEnd()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(20);\n            i0.ɵɵproperty(\"ngForOf\", ctx.historico());\n          }\n        },\n        dependencies: [CommonModule, i1.NgForOf],\n        encapsulation: 2\n      });\n    }\n  }\n  return RelatorioComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}