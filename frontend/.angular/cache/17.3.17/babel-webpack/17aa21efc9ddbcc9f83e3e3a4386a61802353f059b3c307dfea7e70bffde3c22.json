{"ast":null,"code":"import { inject, signal } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { InquilinosService } from '../services/inquilinos.service';\nimport { NotificationService } from '../../../core/services/notification.service';\nimport { UsuariosService } from '../services/usuarios.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction InquilinoFormComponent_option_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const user_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", user_r1.id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate3(\" \", user_r1.nome, \" - \", user_r1.email, \" (\", user_r1.role, \") \");\n  }\n}\nexport let InquilinoFormComponent = /*#__PURE__*/(() => {\n  class InquilinoFormComponent {\n    constructor() {\n      this.fb = inject(FormBuilder);\n      this.service = inject(InquilinosService);\n      this.router = inject(Router);\n      this.route = inject(ActivatedRoute);\n      this.notification = inject(NotificationService);\n      this.usuariosService = inject(UsuariosService);\n      this.editing = signal(false);\n      this.pending = signal(false);\n      this.usuarios = signal([]);\n      this.form = this.fb.nonNullable.group({\n        nome: ['', Validators.required],\n        cpf: ['', Validators.required],\n        telefone: [''],\n        email: ['', [Validators.required, Validators.email]],\n        endereco: [''],\n        observacoes: [''],\n        usuarioId: [null]\n      });\n    }\n    ngOnInit() {\n      const id = Number(this.route.snapshot.paramMap.get('id'));\n      if (id) {\n        this.editing.set(true);\n        this.service.find(id).subscribe({\n          next: inquilino => {\n            this.form.patchValue({\n              nome: inquilino.nome,\n              cpf: inquilino.cpf,\n              telefone: inquilino.telefone ?? '',\n              email: inquilino.email,\n              endereco: inquilino.endereco ?? '',\n              observacoes: inquilino.observacoes ?? '',\n              usuarioId: inquilino.usuario?.id ?? null\n            });\n          },\n          error: () => this.notification.error('Nao foi possivel carregar o inquilino.')\n        });\n      }\n      this.loadUsuarios();\n    }\n    submit() {\n      if (this.form.invalid) {\n        this.form.markAllAsTouched();\n        return;\n      }\n      this.pending.set(true);\n      const payload = this.form.getRawValue();\n      const id = Number(this.route.snapshot.paramMap.get('id'));\n      const request = this.editing() ? this.service.update(id, payload) : this.service.create(payload);\n      request.subscribe({\n        next: () => {\n          this.pending.set(false);\n          this.notification.success('Inquilino salvo com sucesso.');\n          this.router.navigate(['/inquilinos']);\n        },\n        error: () => {\n          this.pending.set(false);\n          this.notification.error('Erro ao salvar o inquilino.');\n        }\n      });\n    }\n    loadUsuarios() {\n      this.api.get('/usuarios').subscribe({\n        next: users => this.usuarios.set(users),\n        error: () => this.notification.warning('Nao foi possivel carregar usuarios.')\n      });\n    }\n    static {\n      this.ɵfac = function InquilinoFormComponent_Factory(t) {\n        return new (t || InquilinoFormComponent)();\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: InquilinoFormComponent,\n        selectors: [[\"app-inquilino-form\"]],\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 40,\n        vars: 5,\n        consts: [[1, \"max-w-3xl\", \"mx-auto\", \"card\"], [1, \"text-2xl\", \"font-semibold\", \"text-primary\", \"mb-6\"], [1, \"grid\", \"md:grid-cols-2\", \"gap-4\", 3, \"ngSubmit\", \"formGroup\"], [1, \"md:col-span-2\"], [1, \"text-sm\", \"text-gray-400\", \"block\", \"mb-1\"], [\"formControlName\", \"nome\", 1, \"input-control\"], [\"formControlName\", \"cpf\", \"placeholder\", \"000.000.000-00\", 1, \"input-control\"], [\"formControlName\", \"telefone\", \"placeholder\", \"(00) 00000-0000\", 1, \"input-control\"], [\"formControlName\", \"email\", \"type\", \"email\", 1, \"input-control\"], [\"formControlName\", \"endereco\", 1, \"input-control\"], [\"formControlName\", \"observacoes\", \"rows\", \"4\", 1, \"input-control\"], [\"formControlName\", \"usuarioId\", 1, \"input-control\"], [3, \"ngValue\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"md:col-span-2\", \"flex\", \"justify-end\", \"gap-3\"], [\"type\", \"button\", 1, \"btn-outline\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn-primary\", 3, \"disabled\"], [3, \"value\"]],\n        template: function InquilinoFormComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n            i0.ɵɵtext(2);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"form\", 2);\n            i0.ɵɵlistener(\"ngSubmit\", function InquilinoFormComponent_Template_form_ngSubmit_3_listener() {\n              return ctx.submit();\n            });\n            i0.ɵɵelementStart(4, \"div\", 3)(5, \"label\", 4);\n            i0.ɵɵtext(6, \"Nome\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(7, \"input\", 5);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(8, \"div\")(9, \"label\", 4);\n            i0.ɵɵtext(10, \"CPF\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(11, \"input\", 6);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(12, \"div\")(13, \"label\", 4);\n            i0.ɵɵtext(14, \"Telefone\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(15, \"input\", 7);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(16, \"div\", 3)(17, \"label\", 4);\n            i0.ɵɵtext(18, \"Email\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(19, \"input\", 8);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(20, \"div\", 3)(21, \"label\", 4);\n            i0.ɵɵtext(22, \"Endereco\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(23, \"input\", 9);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(24, \"div\", 3)(25, \"label\", 4);\n            i0.ɵɵtext(26, \"ObservAcoeses\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(27, \"textarea\", 10);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(28, \"div\", 3)(29, \"label\", 4);\n            i0.ɵɵtext(30, \"Usuario vinculado\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(31, \"select\", 11)(32, \"option\", 12);\n            i0.ɵɵtext(33, \"Selecione um usuario\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(34, InquilinoFormComponent_option_34_Template, 2, 4, \"option\", 13);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(35, \"div\", 14)(36, \"button\", 15);\n            i0.ɵɵlistener(\"click\", function InquilinoFormComponent_Template_button_click_36_listener() {\n              return ctx.router.navigate([\"/inquilinos\"]);\n            });\n            i0.ɵɵtext(37, \"Cancelar\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(38, \"button\", 16);\n            i0.ɵɵtext(39, \"Salvar\");\n            i0.ɵɵelementEnd()()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(2);\n            i0.ɵɵtextInterpolate1(\" \", ctx.editing() ? \"Editar inquilino\" : \"Novo inquilino\", \" \");\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"formGroup\", ctx.form);\n            i0.ɵɵadvance(29);\n            i0.ɵɵproperty(\"ngValue\", null);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngForOf\", ctx.usuarios());\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"disabled\", ctx.form.invalid || ctx.pending);\n          }\n        },\n        dependencies: [CommonModule, i1.NgForOf, ReactiveFormsModule, i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n        styles: [\".input-control[_ngcontent-%COMP%]{width:100%;border-radius:.5rem;border-width:1px;border-color:#6366f14d;--tw-bg-opacity: 1;background-color:rgb(30 41 59 / var(--tw-bg-opacity, 1));padding:.5rem .75rem}.input-control[_ngcontent-%COMP%]:focus{outline:2px solid transparent;outline-offset:2px;--tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow, 0 0 #0000);--tw-ring-opacity: 1;--tw-ring-color: rgb(99 102 241 / var(--tw-ring-opacity, 1)) }\"]\n      });\n    }\n  }\n  return InquilinoFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}