{"ast":null,"code":"import { inject, signal } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { PrediosService } from '../services/predios.service';\nimport { NotificationService } from '../../../core/services/notification.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction PredioListComponent_div_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1, \" Carregando predios... \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PredioListComponent_div_36_div_1_p_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 26);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const predio_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\"Contato: \", predio_r2.contato, \"\");\n  }\n}\nfunction PredioListComponent_div_36_div_1_p_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 3);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const predio_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(predio_r2.observacoes);\n  }\n}\nfunction PredioListComponent_div_36_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 22)(1, \"div\", 23)(2, \"h3\", 24);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\", 25);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"p\", 3);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"p\", 26);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"p\", 26);\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(12, PredioListComponent_div_36_div_1_p_12_Template, 2, 1, \"p\", 27)(13, PredioListComponent_div_36_div_1_p_13_Template, 2, 1, \"p\", 28);\n    i0.ɵɵelementStart(14, \"div\", 29)(15, \"button\", 30);\n    i0.ɵɵlistener(\"click\", function PredioListComponent_div_36_div_1_Template_button_click_15_listener() {\n      const predio_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.remove(predio_r2.id));\n    });\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const predio_r2 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(predio_r2.nome);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"#\", predio_r2.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(predio_r2.endereco);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Unidades: \", predio_r2.numeroUnidades || 0, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Sindico: \", predio_r2.sindico || \"Nao informado\", \"\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", predio_r2.contato);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", predio_r2.observacoes);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r2.removingId() === predio_r2.id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.removingId() === predio_r2.id ? \"Removendo...\" : \"Remover\", \" \");\n  }\n}\nfunction PredioListComponent_div_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtemplate(1, PredioListComponent_div_36_div_1_Template, 17, 9, \"div\", 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.predios());\n  }\n}\nfunction PredioListComponent_p_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 31);\n    i0.ɵɵtext(1, \" Nenhum predio cadastrado ate o momento. \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let PredioListComponent = /*#__PURE__*/(() => {\n  class PredioListComponent {\n    constructor() {\n      this.fb = inject(FormBuilder);\n      this.service = inject(PrediosService);\n      this.notification = inject(NotificationService);\n      this.predios = signal([]);\n      this.loading = signal(false);\n      this.pending = signal(false);\n      this.removingId = signal(null);\n      this.form = this.fb.nonNullable.group({\n        nome: ['', Validators.required],\n        endereco: ['', Validators.required],\n        numeroUnidades: [0, [Validators.required, Validators.min(0)]],\n        sindico: [''],\n        contato: [''],\n        observacoes: ['']\n      });\n      this.load();\n    }\n    load() {\n      this.loading.set(true);\n      this.service.list().subscribe({\n        next: data => {\n          this.predios.set(data);\n          this.loading.set(false);\n        },\n        error: () => {\n          this.loading.set(false);\n          this.notification.error('Nao foi possivel carregar os predios.');\n        }\n      });\n    }\n    add() {\n      if (this.form.invalid || this.pending()) {\n        this.form.markAllAsTouched();\n        return;\n      }\n      this.pending.set(true);\n      const value = this.form.getRawValue();\n      const payload = {\n        nome: value.nome,\n        endereco: value.endereco,\n        numeroUnidades: Number(value.numeroUnidades),\n        sindico: value.sindico || undefined,\n        contato: value.contato || undefined,\n        observacoes: value.observacoes || undefined\n      };\n      this.service.create(payload).subscribe({\n        next: () => {\n          this.notification.success('Predio cadastrado com sucesso.');\n          this.form.reset({\n            nome: '',\n            endereco: '',\n            numeroUnidades: 0,\n            sindico: '',\n            contato: '',\n            observacoes: ''\n          });\n          this.pending.set(false);\n          this.load();\n        },\n        error: () => {\n          this.pending.set(false);\n          this.notification.error('Falha ao cadastrar o predio.');\n        }\n      });\n    }\n    remove(id) {\n      if (!id || this.removingId() === id) {\n        return;\n      }\n      this.removingId.set(id);\n      this.service.remove(id).subscribe({\n        next: () => {\n          this.notification.success('Predio removido com sucesso.');\n          this.removingId.set(null);\n          this.load();\n        },\n        error: () => {\n          this.removingId.set(null);\n          this.notification.error('Falha ao remover o predio.');\n        }\n      });\n    }\n    static {\n      this.ɵfac = function PredioListComponent_Factory(t) {\n        return new (t || PredioListComponent)();\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: PredioListComponent,\n        selectors: [[\"app-predio-list\"]],\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 38,\n        vars: 6,\n        consts: [[1, \"space-y-6\"], [1, \"flex\", \"flex-col\", \"md:flex-row\", \"md:items-center\", \"md:justify-between\", \"gap-4\"], [1, \"text-2xl\", \"font-semibold\", \"text-primary\"], [1, \"text-sm\", \"text-gray-400\"], [1, \"card\", \"grid\", \"gap-3\", \"md:grid-cols-6\", 3, \"ngSubmit\", \"formGroup\"], [1, \"md:col-span-2\"], [1, \"text-xs\", \"text-gray-400\", \"block\", \"mb-1\"], [\"formControlName\", \"nome\", 1, \"input-control\"], [\"formControlName\", \"endereco\", 1, \"input-control\"], [\"type\", \"number\", \"formControlName\", \"numeroUnidades\", \"min\", \"0\", 1, \"input-control\"], [\"formControlName\", \"sindico\", 1, \"input-control\"], [\"formControlName\", \"contato\", 1, \"input-control\"], [1, \"md:col-span-5\"], [\"formControlName\", \"observacoes\", \"rows\", \"1\", 1, \"input-control\"], [1, \"flex\", \"items-center\", \"justify-end\"], [\"type\", \"submit\", 1, \"btn-primary\", \"text-sm\", \"h-11\", \"md:self-center\", \"w-full\", 3, \"disabled\"], [\"class\", \"text-center text-gray-400 py-6\", 4, \"ngIf\"], [\"class\", \"grid gap-4 md:grid-cols-2 xl:grid-cols-3\", 4, \"ngIf\"], [\"class\", \"text-center text-gray-500 py-6\", 4, \"ngIf\"], [1, \"text-center\", \"text-gray-400\", \"py-6\"], [1, \"grid\", \"gap-4\", \"md:grid-cols-2\", \"xl:grid-cols-3\"], [\"class\", \"card space-y-3\", 4, \"ngFor\", \"ngForOf\"], [1, \"card\", \"space-y-3\"], [1, \"flex\", \"items-start\", \"justify-between\", \"gap-2\"], [1, \"text-lg\", \"font-semibold\", \"text-primary\"], [1, \"text-xs\", \"text-gray-400\"], [1, \"text-sm\", \"text-gray-300\"], [\"class\", \"text-sm text-gray-300\", 4, \"ngIf\"], [\"class\", \"text-sm text-gray-400\", 4, \"ngIf\"], [1, \"flex\", \"justify-end\"], [\"type\", \"button\", 1, \"btn-outline\", \"text-xs\", \"px-3\", \"py-1\", \"border-rose-400\", \"text-rose-400\", \"hover:bg-rose-500/10\", 3, \"click\", \"disabled\"], [1, \"text-center\", \"text-gray-500\", \"py-6\"]],\n        template: function PredioListComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\")(3, \"h1\", 2);\n            i0.ɵɵtext(4, \"Predios\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(5, \"p\", 3);\n            i0.ɵɵtext(6, \"Cadastro de empreendimentos e unidades.\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(7, \"form\", 4);\n            i0.ɵɵlistener(\"ngSubmit\", function PredioListComponent_Template_form_ngSubmit_7_listener() {\n              return ctx.add();\n            });\n            i0.ɵɵelementStart(8, \"div\", 5)(9, \"label\", 6);\n            i0.ɵɵtext(10, \"Nome\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(11, \"input\", 7);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(12, \"div\", 5)(13, \"label\", 6);\n            i0.ɵɵtext(14, \"Endereco\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(15, \"input\", 8);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(16, \"div\")(17, \"label\", 6);\n            i0.ɵɵtext(18, \"Unidades\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(19, \"input\", 9);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(20, \"div\")(21, \"label\", 6);\n            i0.ɵɵtext(22, \"Sindico\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(23, \"input\", 10);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(24, \"div\", 5)(25, \"label\", 6);\n            i0.ɵɵtext(26, \"Contato\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(27, \"input\", 11);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(28, \"div\", 12)(29, \"label\", 6);\n            i0.ɵɵtext(30, \"Observacoes\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(31, \"textarea\", 13);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(32, \"div\", 14)(33, \"button\", 15);\n            i0.ɵɵtext(34);\n            i0.ɵɵelementEnd()()()();\n            i0.ɵɵtemplate(35, PredioListComponent_div_35_Template, 2, 0, \"div\", 16)(36, PredioListComponent_div_36_Template, 2, 1, \"div\", 17)(37, PredioListComponent_p_37_Template, 2, 0, \"p\", 18);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(7);\n            i0.ɵɵproperty(\"formGroup\", ctx.form);\n            i0.ɵɵadvance(26);\n            i0.ɵɵproperty(\"disabled\", ctx.pending());\n            i0.ɵɵadvance();\n            i0.ɵɵtextInterpolate1(\" \", ctx.pending() ? \"Adicionando...\" : \"Adicionar\", \" \");\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.loading());\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", !ctx.loading() && ctx.predios().length);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", !ctx.loading() && !ctx.predios().length);\n          }\n        },\n        dependencies: [CommonModule, i1.NgForOf, i1.NgIf, ReactiveFormsModule, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.MinValidator, i2.FormGroupDirective, i2.FormControlName],\n        styles: [\".input-control[_ngcontent-%COMP%]{width:100%;border-radius:.5rem;border-width:1px;border-color:#6366f14d;--tw-bg-opacity: 1;background-color:rgb(30 41 59 / var(--tw-bg-opacity, 1));padding:.5rem .75rem}.input-control[_ngcontent-%COMP%]:focus{outline:2px solid transparent;outline-offset:2px;--tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow, 0 0 #0000);--tw-ring-opacity: 1;--tw-ring-color: rgb(99 102 241 / var(--tw-ring-opacity, 1)) }\"]\n      });\n    }\n  }\n  return PredioListComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}