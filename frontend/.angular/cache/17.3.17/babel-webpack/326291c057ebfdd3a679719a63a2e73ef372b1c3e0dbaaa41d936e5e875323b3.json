{"ast":null,"code":"import { inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { RouterLink, Router } from '@angular/router';\nimport { AuthService } from '../../../core/services/auth.service';\nimport { NotificationService } from '../../../core/services/notification.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport let RegisterComponent = /*#__PURE__*/(() => {\n  class RegisterComponent {\n    constructor() {\n      this.fb = inject(FormBuilder);\n      this.authService = inject(AuthService);\n      this.notification = inject(NotificationService);\n      this.router = inject(Router);\n      this.pending = false;\n      this.form = this.fb.nonNullable.group({\n        nome: ['', [Validators.required]],\n        email: ['', [Validators.required, Validators.email]],\n        senha: ['', [Validators.required, Validators.minLength(6)]],\n        role: this.fb.nonNullable.control('GESTOR')\n      });\n    }\n    submit() {\n      if (this.form.invalid) {\n        this.form.markAllAsTouched();\n        return;\n      }\n      this.pending = true;\n      this.authService.register(this.form.getRawValue()).subscribe({\n        next: () => {\n          this.pending = false;\n          this.notification.success('Usuario cadastrado com sucesso!');\n          this.router.navigate(['/dashboard']);\n        },\n        error: () => {\n          this.pending = false;\n          this.notification.error('Nao foi possivel cadastrar o usuario.');\n        }\n      });\n    }\n    static {\n      this.ɵfac = function RegisterComponent_Factory(t) {\n        return new (t || RegisterComponent)();\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: RegisterComponent,\n        selectors: [[\"app-register\"]],\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 34,\n        vars: 3,\n        consts: [[1, \"flex\", \"justify-center\", \"items-center\", \"min-h-[calc(100vh-4rem)]\"], [1, \"card\", \"w-full\", \"max-w-lg\"], [1, \"text-2xl\", \"font-semibold\", \"mb-6\", \"text-primary\", \"text-center\"], [1, \"grid\", \"md:grid-cols-2\", \"gap-4\", 3, \"ngSubmit\", \"formGroup\"], [1, \"md:col-span-2\"], [1, \"block\", \"text-sm\", \"text-gray-300\", \"mb-1\"], [\"formControlName\", \"nome\", 1, \"w-full\", \"bg-neutral\", \"border\", \"border-primary/30\", \"rounded-lg\", \"px-3\", \"py-2\", \"focus:ring-2\", \"focus:ring-primary\"], [\"formControlName\", \"email\", \"type\", \"email\", 1, \"w-full\", \"bg-neutral\", \"border\", \"border-primary/30\", \"rounded-lg\", \"px-3\", \"py-2\", \"focus:ring-2\", \"focus:ring-primary\"], [\"formControlName\", \"senha\", \"type\", \"password\", 1, \"w-full\", \"bg-neutral\", \"border\", \"border-primary/30\", \"rounded-lg\", \"px-3\", \"py-2\", \"focus:ring-2\", \"focus:ring-primary\"], [\"formControlName\", \"role\", 1, \"w-full\", \"bg-neutral\", \"border\", \"border-primary/30\", \"rounded-lg\", \"px-3\", \"py-2\", \"focus:ring-2\", \"focus:ring-primary\"], [\"value\", \"ADMIN\"], [\"value\", \"GESTOR\"], [\"value\", \"INQUILINO\"], [\"type\", \"submit\", 1, \"btn-primary\", \"w-full\", 3, \"disabled\"], [1, \"text-center\", \"text-xs\", \"text-gray-400\", \"mt-4\"], [\"routerLink\", \"../login\", 1, \"text-primary\", \"hover:underline\", \"font-semibold\"]],\n        template: function RegisterComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n            i0.ɵɵtext(3, \"Cadastrar usuario\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(4, \"form\", 3);\n            i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_4_listener() {\n              return ctx.submit();\n            });\n            i0.ɵɵelementStart(5, \"div\", 4)(6, \"label\", 5);\n            i0.ɵɵtext(7, \"Nome\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(8, \"input\", 6);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(9, \"div\", 4)(10, \"label\", 5);\n            i0.ɵɵtext(11, \"Email\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(12, \"input\", 7);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(13, \"div\")(14, \"label\", 5);\n            i0.ɵɵtext(15, \"Senha\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(16, \"input\", 8);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(17, \"div\")(18, \"label\", 5);\n            i0.ɵɵtext(19, \"Perfil\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(20, \"select\", 9)(21, \"option\", 10);\n            i0.ɵɵtext(22, \"Administrador\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(23, \"option\", 11);\n            i0.ɵɵtext(24, \"Gestor\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(25, \"option\", 12);\n            i0.ɵɵtext(26, \"Inquilino\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(27, \"div\", 4)(28, \"button\", 13);\n            i0.ɵɵtext(29);\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(30, \"div\", 14);\n            i0.ɵɵtext(31, \" Ja possui conta? \");\n            i0.ɵɵelementStart(32, \"a\", 15);\n            i0.ɵɵtext(33, \"Entrar\");\n            i0.ɵɵelementEnd()()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"formGroup\", ctx.form);\n            i0.ɵɵadvance(24);\n            i0.ɵɵproperty(\"disabled\", ctx.form.invalid || ctx.pending);\n            i0.ɵɵadvance();\n            i0.ɵɵtextInterpolate1(\" \", ctx.pending ? \"Enviando...\" : \"Cadastrar\", \" \");\n          }\n        },\n        dependencies: [CommonModule, ReactiveFormsModule, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, RouterLink],\n        encapsulation: 2\n      });\n    }\n  }\n  return RegisterComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}