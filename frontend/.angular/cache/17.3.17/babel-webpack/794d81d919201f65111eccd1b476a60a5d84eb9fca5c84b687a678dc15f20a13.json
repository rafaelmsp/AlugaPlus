{"ast":null,"code":"import { inject, signal } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DashboardService } from '../services/dashboard.service';\nimport { NotificationService } from '../../../core/services/notification.service';\nimport { NgChartsModule } from 'ng2-charts';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"ng2-charts\";\nexport let DashboardComponent = /*#__PURE__*/(() => {\n  class DashboardComponent {\n    constructor() {\n      this.dashboardService = inject(DashboardService);\n      this.notification = inject(NotificationService);\n      this.summary = signal({\n        totalImoveis: 0,\n        contratosAtivos: 0,\n        totalReceitasMes: 0,\n        totalDespesasMes: 0\n      });\n      this.lineChartData = {\n        labels: [],\n        datasets: [{\n          label: 'Receitas',\n          data: [],\n          borderColor: '#2ea043',\n          backgroundColor: 'rgba(46, 160, 67, 0.2)',\n          tension: 0.4,\n          fill: true\n        }, {\n          label: 'Despesas',\n          data: [],\n          borderColor: '#f85149',\n          backgroundColor: 'rgba(248, 81, 73, 0.2)',\n          tension: 0.4,\n          fill: true\n        }]\n      };\n      this.lineChartOptions = {\n        responsive: true,\n        plugins: {\n          legend: {\n            labels: {\n              color: '#c9d1d9'\n            }\n          }\n        },\n        scales: {\n          x: {\n            ticks: {\n              color: '#8b949e'\n            },\n            grid: {\n              color: '#21262d'\n            }\n          },\n          y: {\n            ticks: {\n              color: '#8b949e'\n            },\n            grid: {\n              color: '#21262d'\n            }\n          }\n        }\n      };\n      this.pieChartData = {\n        labels: [],\n        datasets: [{\n          data: [],\n          backgroundColor: ['#1f6feb', '#2ea043', '#f85149', '#a371f7', '#d29922']\n        }]\n      };\n      this.pieChartOptions = {\n        responsive: true,\n        plugins: {\n          legend: {\n            position: 'bottom',\n            labels: {\n              color: '#c9d1d9'\n            }\n          }\n        }\n      };\n      this.barChartData = {\n        labels: [],\n        datasets: [{\n          label: 'Receitas',\n          data: [],\n          backgroundColor: '#2ea043'\n        }, {\n          label: 'Despesas',\n          data: [],\n          backgroundColor: '#f85149'\n        }]\n      };\n      this.barChartOptions = {\n        responsive: true,\n        plugins: {\n          legend: {\n            labels: {\n              color: '#c9d1d9'\n            }\n          }\n        },\n        scales: {\n          x: {\n            ticks: {\n              color: '#8b949e'\n            },\n            grid: {\n              display: false\n            }\n          },\n          y: {\n            ticks: {\n              color: '#8b949e'\n            },\n            grid: {\n              color: '#21262d'\n            }\n          }\n        }\n      };\n    }\n    ngOnInit() {\n      this.loadSummary();\n      this.loadCharts();\n    }\n    loadSummary() {\n      this.dashboardService.loadSummary().subscribe({\n        next: summary => this.summary.set(summary),\n        error: () => this.notification.error('Nao foi possivel carregar os indicadores.')\n      });\n    }\n    loadCharts() {\n      this.dashboardService.loadChartData().subscribe({\n        next: data => {\n          const labels = data?.labels ?? [];\n          const receitas = data?.receitas ?? [];\n          const despesas = data?.despesas ?? [];\n          const categorias = data?.categorias ?? [];\n          const valoresCategoria = data?.valoresCategoria ?? [];\n          this.lineChartData = {\n            ...this.lineChartData,\n            labels,\n            datasets: [{\n              ...this.lineChartData.datasets[0],\n              data: receitas\n            }, {\n              ...this.lineChartData.datasets[1],\n              data: despesas\n            }]\n          };\n          this.barChartData = {\n            ...this.barChartData,\n            labels,\n            datasets: [{\n              ...this.barChartData.datasets[0],\n              data: receitas\n            }, {\n              ...this.barChartData.datasets[1],\n              data: despesas\n            }]\n          };\n          this.pieChartData = {\n            ...this.pieChartData,\n            labels: categorias,\n            datasets: [{\n              ...this.pieChartData.datasets[0],\n              data: valoresCategoria\n            }]\n          };\n        },\n        error: () => this.notification.warning('Nao foi possivel montar os graficos.')\n      });\n    }\n    static {\n      this.ɵfac = function DashboardComponent_Factory(t) {\n        return new (t || DashboardComponent)();\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: DashboardComponent,\n        selectors: [[\"app-dashboard\"]],\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 37,\n        vars: 23,\n        consts: [[1, \"space-y-6\"], [1, \"grid\", \"gap-4\", \"md:grid-cols-4\"], [1, \"card\"], [1, \"text-sm\", \"text-gray-400\"], [1, \"text-2xl\", \"font-semibold\", \"text-primary\", \"mt-2\"], [1, \"text-2xl\", \"font-semibold\", \"text-emerald-400\", \"mt-2\"], [1, \"text-2xl\", \"font-semibold\", \"text-rose-400\", \"mt-2\"], [1, \"grid\", \"gap-4\", \"lg:grid-cols-2\"], [1, \"text-lg\", \"font-semibold\", \"mb-4\"], [\"baseChart\", \"\", 3, \"data\", \"options\", \"type\"]],\n        template: function DashboardComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"section\", 1)(2, \"article\", 2)(3, \"h3\", 3);\n            i0.ɵɵtext(4, \"Total de imoveis\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(5, \"p\", 4);\n            i0.ɵɵtext(6);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(7, \"article\", 2)(8, \"h3\", 3);\n            i0.ɵɵtext(9, \"Contratos ativos\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(10, \"p\", 4);\n            i0.ɵɵtext(11);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(12, \"article\", 2)(13, \"h3\", 3);\n            i0.ɵɵtext(14, \"Receitas no mAas\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(15, \"p\", 5);\n            i0.ɵɵtext(16);\n            i0.ɵɵpipe(17, \"currency\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(18, \"article\", 2)(19, \"h3\", 3);\n            i0.ɵɵtext(20, \"Despesas no mAas\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(21, \"p\", 6);\n            i0.ɵɵtext(22);\n            i0.ɵɵpipe(23, \"currency\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(24, \"section\", 7)(25, \"article\", 2)(26, \"h3\", 8);\n            i0.ɵɵtext(27, \"Fluxo de caixa\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(28, \"canvas\", 9);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(29, \"article\", 2)(30, \"h3\", 8);\n            i0.ɵɵtext(31, \"Composicao de despesas\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(32, \"canvas\", 9);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(33, \"section\", 2)(34, \"h3\", 8);\n            i0.ɵɵtext(35, \"Receitas x Despesas\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(36, \"canvas\", 9);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(6);\n            i0.ɵɵtextInterpolate(ctx.summary().totalImoveis);\n            i0.ɵɵadvance(5);\n            i0.ɵɵtextInterpolate(ctx.summary().contratosAtivos);\n            i0.ɵɵadvance(5);\n            i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind4(17, 13, ctx.summary().totalReceitasMes, \"BRL\", \"symbol\", \"1.0-2\"), \" \");\n            i0.ɵɵadvance(6);\n            i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind4(23, 18, ctx.summary().totalDespesasMes, \"BRL\", \"symbol\", \"1.0-2\"), \" \");\n            i0.ɵɵadvance(6);\n            i0.ɵɵproperty(\"data\", ctx.lineChartData)(\"options\", ctx.lineChartOptions)(\"type\", \"line\");\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"data\", ctx.pieChartData)(\"options\", ctx.pieChartOptions)(\"type\", \"pie\");\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"data\", ctx.barChartData)(\"options\", ctx.barChartOptions)(\"type\", \"bar\");\n          }\n        },\n        dependencies: [CommonModule, i1.CurrencyPipe, NgChartsModule, i2.BaseChartDirective],\n        encapsulation: 2\n      });\n    }\n  }\n  return DashboardComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}